# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023 Univention GmbH

---
include:
  - project: "univention/documentation/sphinx-docker"
    file: "pipeline/sphinx.yml"
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v1.16.2"
    file:
      - "defaults/stages.yaml"
      - "defaults/souvap-workflow.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/semantic-release-env.yaml"
      - "jobs/container-build-souvap.yaml"
      - "jobs/package-and-publish-helm-charts-souvap.yaml"
      - "jobs/check-debian-updates.yaml"

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_OPEN_MERGE_REQUESTS'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_PROTECTED == "true"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "webide"'

variables:
  APPCENTER_VERSION: "2.2.10"

  # Variables for sphinx-docs
  DOCS_DIR: "docs"
  LANG: "C.UTF-8"
  DEBIAN_FRONTEND: "noninteractive"
  UNIVENTION_BASECONF: "/dev/null"
  SOUVAP_HELM_PROJECT_ID: "128"

.build-matrix: &build-matrix
  - IMAGE_NAME: "ox-connector-appcenter"
    DOCKERFILE_PATH: "Dockerfile"
    KANIKO_ARGS: "--build-arg version=${DOCKER_BUILD_VERSION}"
  - IMAGE_NAME: "ox-connector-standalone"
    DOCKERFILE_PATH: "Dockerfile.standalone"
    KANIKO_ARGS: "--target=final --build-arg version=${RELEASE_VERSION}"
  - IMAGE_NAME: "ox-connector-standalone-test"
    DOCKERFILE_PATH: "Dockerfile.standalone"
    KANIKO_ARGS: "--target=test --build-arg version=${RELEASE_VERSION}"
  - IMAGE_NAME: "ox-connector-dependencies"
    DOCKERFILE_PATH: "ox-connector-extensions/Dockerfile"
  - IMAGE_NAME: "ox-connector-appcenter-test"
    DOCKERFILE_PATH: "Dockerfile"
    KANIKO_ARGS: "--target=test --build-arg version=${DOCKER_BUILD_VERSION}"

.post-build-matrix: &post-build-matrix
  - IMAGE_NAME:
      - "ox-connector-appcenter"
      - "ox-connector-standalone"
      - "ox-connector-standalone-test"
      - "ox-connector-dependencies"

.publish-matrix: &publish-matrix
  - IMAGE_NAME:
      - "ox-connector-appcenter"
      - "ox-connector-standalone"

.version-rules: &version-rules
  - if: '$CI_PIPELINE_SOURCE == "schedule"'
    when: "never"
  - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
    variables:
      DOCKER_BUILD_VERSION: "${APPCENTER_VERSION}-dev"
  - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    variables:
      DOCKER_BUILD_VERSION: "${APPCENTER_VERSION}"

lint-pre-commit:
  allow_failure: true

container-build:
  parallel:
    matrix: *build-matrix
  variables:
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR"
  rules: *version-rules

container-generate-sbom:
  parallel:
    matrix: *post-build-matrix

container-sign:
  parallel:
    matrix: *post-build-matrix

container-security-scan:
  parallel:
    matrix: *post-build-matrix

push-image-souvap:
  parallel:
    matrix: *publish-matrix

container-sign-souvap:
  parallel:
    matrix: *publish-matrix

# Uses APPCENTER_VERSION internally
trigger-docs:
  stage: "build"
  variables:
    DOC_TARGET_NAME: "ox-connector-app"
  trigger:
    strategy: "depend"
    include:
      - local: ".gitlab-ci.docs.yml"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: "never"
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      variables:
        DOCKER_BUILD_VERSION: "${APPCENTER_VERSION}-dev"
        DOC_TARGET_PATH: "${DOC_TARGET_NAME}/${DOCKER_BUILD_VERSION}"
      changes:
        - "$DOCS_DIR/**/*"
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        DOCKER_BUILD_VERSION: "${APPCENTER_VERSION}"
        DOC_TARGET_PATH: "${DOC_TARGET_NAME}/${DOCKER_BUILD_VERSION}"
      changes:
        - "$DOCS_DIR/**/*"
      when: "manual"

upload-docker-image:
  stage: "publish"
  when: "manual"
  variables:
    GIT_STRATEGY: none
    BUILD_IMAGE_PATH_AND_TAG: "${CI_REGISTRY_IMAGE}/ox-connector-appcenter-test:${RELEASE_VERSION}"
  rules: *version-rules
  image:
    name: "docker-registry.knut.univention.de/knut/ssh"
    entrypoint: [""]
  before_script:
    - chmod 0600 "${SSH_PRIVATE_KEY}"
  script:
    - |
      SSH_ARGS="-o BatchMode=yes -i "${SSH_PRIVATE_KEY}" -l root docker.knut.univention.de"
      PUB_REGISTRY_SERVER="docker-upload.software-univention.de"
      PUB_IMAGE_NAME="ox-connector"
      PUB_REGISTRY_PATH_AND_TAG="${PUB_REGISTRY_SERVER}/${PUB_IMAGE_NAME}:${DOCKER_BUILD_VERSION}"
      ssh ${SSH_ARGS} "docker pull ${BUILD_IMAGE_PATH_AND_TAG}"
      ssh ${SSH_ARGS} "docker tag ${BUILD_IMAGE_PATH_AND_TAG} ${PUB_REGISTRY_PATH_AND_TAG}"
      ssh ${SSH_ARGS} "docker push ${PUB_REGISTRY_PATH_AND_TAG}"

check-debian-updates:
  parallel:
    matrix: *publish-matrix
  variables:
    TARGET_IMAGE: "${CI_REGISTRY_IMAGE}/ox-connector-standalone:latest"
...
