---

include:
  - project: "univention/documentation/sphinx-docker"
    file: "pipeline/sphinx.yml"
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v1.9.9"
    file:
      - "defaults/stages.yaml"
      - "defaults/souvap-workflow.yaml"
      - "templates/souvap.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/semantic-release-env.yaml"
      - "jobs/container-build.yaml"
      - "jobs/package-and-publish-helm-charts.yaml"

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_OPEN_MERGE_REQUESTS'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_PROTECTED == "true"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "webide"'

variables:
  APP_VERSION:
    value: ""
    description: "Docker tag"
  # Variables for sphinx-docs
  DOCS_DIR: "docs"
  LANG: "C.UTF-8"
  DEBIAN_FRONTEND: "noninteractive"
  UNIVENTION_BASECONF: "/dev/null"
  DOC_TARGET_VERSION: "2.2.7"
  DOC_TARGET_NAME: "ox-connector-app"
  DOC_TARGET_PATH: "${DOC_TARGET_NAME}/${DOC_TARGET_VERSION}"

  # Variables for ".push-image-souvap" include
  SOUVAP_REGISTRY_PATH: "souvap/tooling/images/ox-connector"
  SOUVAP_REGISTRY_REPO: "${SOUVAP_REGISTRY_HOST}/${SOUVAP_REGISTRY_PATH}"

  # Variables for ".publish-helm-charts-souvap" include
  SOUVAP_API_V4_URL: "https://gitlab.souvap-univention.de/api/v4"
  SOUVAP_HELM_PROJECT_ID: "128"

lint-pre-commit:
  allow_failure: true

.build-matrix: &build-matrix
  - IMAGE_NAME: "ox-connector-appcenter"
    DOCKERFILE_PATH: "Dockerfile"
    KANIKO_ARGS: "--build-arg version=${DOCKER_BUILD_VERSION}"
  - IMAGE_NAME: "ox-connector-standalone"
    DOCKERFILE_PATH: "Dockerfile.standalone"
    KANIKO_ARGS: "--target=final --build-arg version=${RELEASE_VERSION}"
  - IMAGE_NAME: "ox-connector-standalone-test"
    DOCKERFILE_PATH: "Dockerfile.standalone"
    KANIKO_ARGS: "--target=test --build-arg version=${RELEASE_VERSION}"
  - IMAGE_NAME: "ox-connector-dependencies"
    DOCKERFILE_PATH: "ox-connector-extensions/Dockerfile"

.post-build-matrix: &post-build-matrix
  - IMAGE_NAME:
      - "ox-connector-appcenter"
      - "ox-connector-standalone"
      - "ox-connector-standalone-test"
      - "ox-connector-dependencies"

.publish-matrix: &publish-matrix
  - IMAGE_NAME:
      - "ox-connector-appcenter"
      - "ox-connector-standalone"

container-build:
  parallel:
    matrix: *build-matrix
  variables:
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR"
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      variables:
        DOCKER_BUILD_VERSION: "${DOC_TARGET_VERSION}-dev"
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        DOCKER_BUILD_VERSION: "${DOC_TARGET_VERSION}"

container-generate-sbom:
  parallel:
    matrix: *post-build-matrix

container-sign:
  parallel:
    matrix: *post-build-matrix

container-security-scan:
  parallel:
    matrix: *post-build-matrix

publish-images:
  extends: .push-image-souvap
  parallel:
    matrix: *publish-matrix

publish-helm-charts-souvap:
  extends: .publish-helm-charts-souvap

trigger-docs:
  stage: trigger
  variables:
    RELEASE_VERSION: "${RELEASE_VERSION}"
  trigger:
    strategy: depend
    include:
      - local: ".gitlab-ci.docs.yml"
  rules:
    - changes:
        - "$DOCS_DIR/**/*"

compute-image-name:
  stage: "build"
  extends: ".kaniko_pre"
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $APP_VERSION != ""

build-docker-image:
  stage: "build"
  extends: ".kaniko"
  variables:
    DOCKERFILE_PATH: "Dockerfile"
    KANIKO_ARGS: "--target=test --build-arg version=$DOC_TARGET_VERSION"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

upload-docker-image:
  stage: "publish"
  needs:
    - job: compute-image-name
  rules:
    - if: $APP_VERSION != ""
  variables:
    GIT_STRATEGY: none
  image:
    name: "docker-registry.knut.univention.de/knut/ssh"
    entrypoint: [""]
  before_script:
    - chmod 0600 "${SSH_PRIVATE_KEY}"
  script:
    - ssh -o BatchMode=yes -i "${SSH_PRIVATE_KEY}" -l root docker.knut.univention.de
      "docker pull ${BUILD_IMAGE_TAG}"
    - ssh -o BatchMode=yes -i "${SSH_PRIVATE_KEY}" -l root docker.knut.univention.de
      "docker tag ${BUILD_IMAGE_TAG} docker-upload.software-univention.de/ox-connector:${APP_VERSION}"
    - ssh -o BatchMode=yes -i "${SSH_PRIVATE_KEY}" -l root docker.knut.univention.de
      "docker push docker-upload.software-univention.de/ox-connector:${APP_VERSION}"

...
