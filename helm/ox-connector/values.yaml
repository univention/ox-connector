# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023 Univention GmbH

---
# Default values for ox-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Global values
affinity: {}
environment: {}
fullnameOverride: ""
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
tolerations: []
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# -- Optionally specify an extra list of additional volumes.
extraVolumes: []

# -- Optionally specify an extra list of additional volumeMounts.
extraVolumeMounts: []

# Configuration for OX CONNECTOR
oxConnector:
  # -- OX-Mail-Domain to generate OX-email-addresses
  domainName: null
  # -- OX Admin username (the OX Admin can create, modify, delete contexts; has to exist)
  oxMasterAdmin: "oxadminmaster"
  # -- OX Admin password
  oxMasterPassword: null
  # -- Default timezone for new users
  oxLocalTimezone: "Europe/Berlin"
  # -- Default language for new users
  oxLanguage: "de_DE"
  # -- Default context for users (has to exist)
  oxDefaultContext: "10"
  # -- Default SMTP server for new users (if not set explicitely there)
  oxSmtpServer: null
  # -- Default IMAP server for new users (if not set explicitely there)
  oxImapServer: null
  # -- The server where Open-Xchange is installed
  oxSoapServer: null
  # -- OX Connector log level
  # Chose from "DEBUG", "INFO", "WARNING" and "ERROR".
  logLevel: "INFO"

# Configuration for the communication with the provisioning API.
provisioningApi:
  config:
    # -- The maximum number of retries for acknowledging a message
    maxAcknowledgementRetries: 3
  # -- Connection parameters
  connection:
    # -- The base URL the provisioning API is reachable at. (e.g. "https://provisioning-api")
    baseUrl: ""
  # -- Authentication parameters
  auth:
    # -- The username to authenticate with.
    username: "ox-connector"
    # -- The password to authenticate with.
    password: ""

# -- Kubernetes ingress
ingress:
  # -- Set this to `true` in order to enable the installation on Ingress related objects.
  enabled: false

## Docker image
image:
  registry: "artifacts.software-univention.de"
  repository: "nubus-dev/images/ox-connector-standalone"
  pullPolicy: "Always"
  tag: "latest"
  # -- Define image sha256 as an alternative to `tag`
  sha256: null

  waitForDependency:
    registry: "artifacts.software-univention.de"
    imagePullPolicy: "IfNotPresent"
    repository: "nubus/images/wait-for-dependency"
    tag: "0.25.0@sha256:71a4d66fd67db6f92212b1936862b2b0d5a678d412213d74452a9195c2fe67f7"

## Container deployment probes
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 120
    timeoutSeconds: 3
    periodSeconds: 30
    failureThreshold: 3
    successThreshold: 1

  readiness:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 3
    periodSeconds: 15
    failureThreshold: 30
    successThreshold: 1

## Deployment resources
resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

# -- Deployment resources for the dependency waiters
resourcesWaitForDependency: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - "ALL"
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

...
